- name: Install dependencies on all nodes
  hosts: k3s_cluster
  become: yes
  pre_tasks:
    - name: Installing packages
      ansible.builtin.apt:
        name:
         - git
         - telnet
         - iperf3
         - ufw
        state: latest
        update_cache: yes

    - name: Enable and start UFW
      ansible.builtin.service:
        name: ufw
        enabled: yes
        state: started

    # https://docs.k3s.io/installation/requirements?os=debian#operating-systems
    - name: Allow all to api-server
      community.general.ufw:
        rule: allow
        port: 6443
        proto: tcp
    - name: Allow all access from pods and services
      community.general.ufw:
        rule: allow
        src: '{{ item }}'
      loop:
        - 10.42.0.0/16
        - 10.43.0.0/16

    - name: Retrieve setup from github
      ansible.builtin.git:
        repo: "https://github.com/fredrikjag/homelab.git"
        dest: "/tmp/homelab"

    - name: Make auto-deploy directory
      ansible.builtin.file:
        path: /var/lib/rancher/k3s/server/manifests/
        state: directory
        mode: '0755'

    - name: Make config directory
      ansible.builtin.file:
        path: /etc/rancher/k3s/
        state: directory
        mode: '0755'

- name: Install K3s on primary node
  hosts: server[0]
  become: yes
  vars_files:
  - ./values.yaml
  tasks:

    # https://kube-vip.io/docs/usage/k3s/
    - name: Add kube-vip manifest to auto-deploy
      ansible.builtin.shell:
        cmd: "curl https://kube-vip.io/manifests/rbac.yaml > /var/lib/rancher/k3s/server/manifests/kube-vip-rbac.yaml"
        
    - name: Verify kube-vip manifest download
      ansible.builtin.stat:
        path: /var/lib/rancher/k3s/server/manifests/kube-vip-rbac.yaml
      register: kube_vip_manifest

    - name: Ensure kube-vip manifest is downloaded
      ansible.builtin.fail:
        msg: "kube-vip manifest was not downloaded successfully."
      when: not kube_vip_manifest.stat.exists

    # https://kube-vip.io/docs/installation/daemonset/#kube-vip-as-ha-load-balancer-or-both
    - name: Link kube-vip daemonset manifest to auto-deploy
      ansible.builtin.file:
        src: /tmp/homelab/kubernetes/install/config/kube-vip-ds.yaml
        dest: "/var/lib/rancher/k3s/server/manifests/kube-vip-ds.yaml"
        state: link
    
    - name: Link metallb to auto-deploy
      ansible.builtin.file:
        src: "/tmp/homelab/kubernetes/install/config/metallb.yaml"
        dest: "/var/lib/rancher/k3s/server/manifests/metallb.yaml"
        state: link

    - name: Link treafik-config to auto-deploy
      ansible.builtin.file:
        src: "/tmp/homelab/kubernetes/install/config/treafik-config.yaml"
        dest: "/var/lib/rancher/k3s/server/manifests/treafik-config.yaml"
        state: link
    
    - name: Install k3s on primary node
      ansible.builtin.shell:
        cmd: "curl -sfL https://get.k3s.io | K3S_TOKEN='{{ secret }}' sh -s server --tls-san='{{ tls_san_ip }}' --tls-san='{{ tls_san_hostname }}' --disable='servicelb' --cluster-init"

- name: Install K3s on additional nodes
  hosts: server[1:]
  become: yes
  vars_files:
    - ./values.yaml
  tasks:
    - name: Install k3s on additional nodes
      ansible.builtin.shell:
        cmd: "curl -sfL https://get.k3s.io | K3S_TOKEN='{{ secret }}' sh -s server --server https://{{ groups['server'][0] }}:6443 --tls-san='{{ tls_san_ip }}' --tls-san='{{ tls_san_hostname }}' --disable='servicelb'"